name: release-plz

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  toolchain:
    runs-on: ubuntu-latest
    env:
      nightly: ${{github.event.inputs.nightly == 'true' && 'true' || ''}}
    outputs:
      toolchain: ${{steps.set_toolchain.outputs.toolchain}}
      nightly_toolchain: ${{steps.set_toolchain.outputs.nightly_toolchain}}
    steps:
      - uses: actions/checkout@v5
      - name: Set toolchain
        id: set_toolchain
        env:
          toolchain_toml: "rust-toolchain.toml"
        run: |
          if [[ -z $nightly ]] && [[ -f $toolchain_toml ]]; then
            toolchain=$(grep channel $toolchain_toml | sed -r 's/channel = "(.*)"/\1/')
            echo "using toolchain $toolchain from rust-toolchain.toml"
            echo "toolchain=$toolchain" >> "$GITHUB_OUTPUT"
            if [[ $toolchain =~ ^nightly.* ]]; then
              echo "using nightly_toolchain $toolchain"
              echo "nightly_toolchain=$toolchain" >> "$GITHUB_OUTPUT"
            else
              echo "using nightly_toolchain nightly"
              echo "nightly_toolchain=nightly" >> "$GITHUB_OUTPUT"
            fi
          else
            toolchain='nightly'
            echo "using toolchain nightly"
            echo "toolchain=nightly" >> "$GITHUB_OUTPUT"
            echo "using nightly_toolchain nightly"
            echo "nightly_toolchain=nightly" >> "$GITHUB_OUTPUT"
          fi

  release-plz:
    runs-on: ubuntu-latest
    needs: toolchain
    steps:
      - uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{needs.toolchain.outputs.toolchain}}

      - uses: Swatinem/rust-cache@v2

      - name: Run release-plz
        uses: MarcoIeni/release-plz-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
